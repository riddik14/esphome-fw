substitutions:
  device_name: termostato-

esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: ""
  password: ""
  ap:
    ssid: "termostato"
    password: ""

logger:
  level: INFO
  baud_rate: 0

web_server:
  port: 80
  version: 2
api:
ota:
  - platform: esphome
#mqtt:
#  client_id: termostato_airola
#  broker: mqtt.duckdns.org 
#  port: 1883
#  username: 
#  password: 
#  on_message:
#      - topic: sensor_sht_
#        then:
#        - logger.log: MQTT connesso a mqtt!
button:
  - platform: safe_mode
    name: "Restart (Safe Mode)"

i2c:
  sda: GPIO05
  scl: GPIO02
  scan: true
sensor:
 # - platform: sht3xd
 #   temperature:
#      name: "temperatura"
#      filters:
#        - lambda: return x * 1 - 4;
#    humidity:
#      name: "Umidit airola"
#    address: 0x44
#    update_interval: 60s




#sensor:
#  - platform: uptime
#    id: uptime_seconds
#    name: "Termostato airola online"
  - platform: mqtt_subscribe
    name: "temperatura"
    id: temp_
    state_class: "measurement"
    unit_of_measurement: "°C"
  #  topic: sensor/terremoto1/temperature
    topic: led-airola/sensor/temperatura_/state
 #   filters:
 #     - lambda: return x * 1 - 3;
  - platform: mqtt_subscribe
    name: "umidità"
    id: hum_airola
    device_class: "humidity"
    state_class: "measurement"
    unit_of_measurement: "%"
 #   topic: sensor/terremoto1/temperature
    topic: led-airola/sensor/umidit_/state
 #   filters:
 #     - lambda: return x * 1 - 3;

binary_sensor:
  - platform: gpio
    pin: GPIO00
    id: reset
    internal: true
    filters:
      - invert:
      - delayed_off: 10ms
    on_press:
      - switch.toggle:
          id: relay_1

  - platform: gpio
    name: ${device_name}_status
    pin: GPIO04
    id: switch_1
    on_press:
      then:
        - light.turn_on:
             id: led_green
        - climate.control:
             id: termostato_
             mode: "HEAT"
    on_release:
      then:
        - climate.control:
             id: termostato_airola
             mode: "OFF"
        - switch.turn_off:
             id: relay_1
        - light.turn_off:
             id: led_green

switch:
  - platform: restart
    name: "riavvia termotato"
  - platform: gpio
    name: ${device_name}_switch
    pin: GPIO12
    id: relay_1
    restore_mode: restore_default_off
    internal: true 
    on_turn_on:
    - delay: 500ms
    - light.turn_on: led_orange
    on_turn_off:
    - delay: 500ms
    - light.turn_off: led_orange
light:
#  - platform: monochromatic
#    name: ${device_name}_blueled
#    id: led_blue
#    output: blue_led
#    internal: true 
  - platform: monochromatic
    name: ${device_name}_orange
    id: led_orange
    output: orange
    internal: true
  - platform: monochromatic
    name: ${device_name}_green
    id: led_green
    output: green
    internal: true        
       
      

status_led:
  pin:
    number: GPIO13
    inverted: true

output:
#  - platform: esp8266_pwm
#    id: blue_led
#    pin: GPIO13
#    inverted: True
  - platform: esp8266_pwm
    id: orange
    pin: GPIO1
    inverted: False
  - platform: esp8266_pwm
    id: green
    pin: GPIO3
    inverted: False
    

climate:
  - platform: thermostat
    name: "Termostato "
    id: termostato_
    sensor: temp_
    humidity_sensor : hum_
    on_boot_restore_from: memory
    default_preset: eco
    preset:
      -  name: comfort
         default_target_temperature_low: 22 °C
      -  name: eco
         default_target_temperature_low: 15 °C
      -  name: away
         default_target_temperature_low: 10 °C
    min_heating_off_time: 150s
    min_heating_run_time: 120s
    min_idle_time: 30s
    on_control:
      - output.turn_on: 
                id: green
    heat_action:
      - switch.turn_on: 
           id: relay_1
      - output.turn_on: 
           id: orange
    idle_action:
      - switch.turn_off: 
           id: relay_1
      - output.turn_off: 
           id: orange

